def RunTox(String project) {
  echo 'Install tox, NOTICE we use an old version of tox because of CFY-6398 ( relying dict ordering)'
  sh 'sudo pip install tox==1.6.1'
  echo "run tox of ${project}"
  sh "tox -e ${project}"
}
pipeline {
  agent {
    kubernetes {
      label 'dsl-parser'
      defaultContainer 'jnlp'
      yamlFile 'jenkins/build-pod.yaml'
    }
  }
  options {
      checkoutToSubdirectory('cloudify-dsl-parser')
      buildDiscarder(logRotator(numToKeepStr:'10'))
      timeout(time: 60, unit: 'MINUTES')
      timestamps()
  }
  environment {
      WORKSPACE = "${env.WORKSPACE}"
      PROJECT = "cloudify-dsl-parser"
      PATH = "/root/.local/bin:$PATH"
  }
  stages {
    stage('test_defaults') {
      parallel {
        stage('test_default_flake8') {
          steps {
            sh script: "mkdir -p ${env.WORKSPACE}/flake8 && cp -rf ${env.WORKSPACE}/${env.PROJECT}/. ${env.WORKSPACE}/flake8", label: "copying repo to seperate workspace" 
            container('py27') {
              dir("${env.WORKSPACE}/flake8") {
                RunTox('flake8')
              }
            }
          }
        }
        stage('test_default_py27') {
          steps {
            sh script: "mkdir -p ${env.WORKSPACE}/test_py27 && cp -rf ${env.WORKSPACE}/${env.PROJECT}/. ${env.WORKSPACE}/test_py27", label: "copying repo to seperate workspace" 
            container('py27') {
              dir("${env.WORKSPACE}/test_py27") {
                RunTox('test_py27')
              }
            }
          }
        }
        stage('test_default_py26') {
          steps {
            sh script: "mkdir -p ${env.WORKSPACE}/test_py26 && cp -rf ${env.WORKSPACE}/${env.PROJECT}/. ${env.WORKSPACE}/test_py26", label: "copying repo to seperate workspace" 
            container('py27') {
              dir("${env.WORKSPACE}/test_py26") {
                sh '''#!/bin/bash
                git clone https://github.com/yyuu/pyenv.git ~/.pyenv
                export PYENV_ROOT="$HOME/.pyenv"
                export PATH="$PYENV_ROOT/bin:$PATH"
                sudo apt-get install -y build-essential libssl1.0-dev zlib1g-dev xz-utils
                pyenv install 2.6.9
                pyenv local 2.6.9
                '''
                RunTox('test_py26')
              }
            }
          }
        }
      }
    }
  }
}